package com.chiddu.malwareservice.malwareService.controller;


import com.chiddu.malwareservice.malwareService.model.MalwareUrl;
import com.chiddu.malwareservice.malwareService.service.MalwareLookupSerivce;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URLDecoder;
import java.net.URLEncoder;
import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

@RestController
@RequestMapping("/v1")
public class MalwareLookupController {

    @Autowired
    private MalwareLookupSerivce malwareLookupSerivce;


    @GetMapping("/urlinfoall")
    public List<MalwareUrl> get(){
        System.out.println("GOT GET REQUEST");
        return malwareLookupSerivce.get();
    }

    @PostMapping("/addurl")
    public MalwareUrl add(@RequestBody MalwareUrl m){
        malwareLookupSerivce.save(m);
        return m;
    }

    @GetMapping("/urlinfo")
    public ResponseEntity<MalwareUrl> get(@RequestParam(value="url") String url) {
        System.out.println("GOT GET REQUEST FOR URL " + url);
        URLParser u = new URLParser(url,malwareLookupSerivce);
        Thread thread = new Thread(u);
        try {
            thread.start();
            thread.join();
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        MalwareUrl domainHost =u.getMalwareURL();
        System.out.println("Final URL = " + domainHost);

        if (domainHost!=null) {
            return ResponseEntity.ok(domainHost);
            //return ResponseEntity.ok(malwareLookupSerivce.get(url));
        } else {
            return new ResponseEntity(url, HttpStatus.BAD_REQUEST);
        }
    }


}
